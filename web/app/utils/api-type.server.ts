export default {
    "openapi": "3.1.0",
    "info": {
        "title": "Moonhub API - Takehome",
        "version": "1.0.0"
    },
    "paths": {
        "/v1/sample/users/:user_id": {
            "get": {
                "tags": [
                    "sample"
                ],
                "summary": "Read User Me",
                "operationId": "read_user_me_v1_sample_users__user_id_get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z0-9_-]+$",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/nylas/messages": {
            "get": {
                "tags": [
                    "nylas"
                ],
                "summary": "Nylas Messages List",
                "operationId": "nylas_messages_list_v1_nylas_messages_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/MessagePreview"
                                    },
                                    "type": "array",
                                    "title": "Response Nylas Messages List V1 Nylas Messages Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "tags": [
                    "healthcheck"
                ],
                "summary": "Healthcheck",
                "description": "Simple healthcheck endpoint, extend with downstream healthchecks",
                "operationId": "healthcheck_healthcheck_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthCheckResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/asyncapi": {
            "get": {
                "tags": [
                    "asyncapi"
                ],
                "summary": "Serve Asyncapi Schema",
                "description": "Serve the AsyncAPI schema as an HTML response.\n\nArgs:\n    sidebar (bool, optional): Whether to include the sidebar in the HTML. Defaults to True.\n    info (bool, optional): Whether to include the info section in the HTML. Defaults to True.\n    servers (bool, optional): Whether to include the servers section in the HTML. Defaults to True.\n    operations (bool, optional): Whether to include the operations section in the HTML. Defaults to True.\n    messages (bool, optional): Whether to include the messages section in the HTML. Defaults to True.\n    schemas (bool, optional): Whether to include the schemas section in the HTML. Defaults to True.\n    errors (bool, optional): Whether to include the errors section in the HTML. Defaults to True.\n    expandMessageExamples (bool, optional): Whether to expand message examples in the HTML. Defaults to True.\n\nReturns:\n    HTMLResponse: The HTML response containing the AsyncAPI schema.\n\nRaises:\n    AssertionError: If the schema is not available.\n!!! note\n\n    The above docstring is autogenerated by docstring-gen library (https://docstring-gen.airt.ai)",
                "operationId": "serve_asyncapi_schema_asyncapi_get",
                "parameters": [
                    {
                        "name": "sidebar",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Sidebar"
                        }
                    },
                    {
                        "name": "info",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Info"
                        }
                    },
                    {
                        "name": "servers",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Servers"
                        }
                    },
                    {
                        "name": "operations",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Operations"
                        }
                    },
                    {
                        "name": "messages",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Messages"
                        }
                    },
                    {
                        "name": "schemas",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Schemas"
                        }
                    },
                    {
                        "name": "errors",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Errors"
                        }
                    },
                    {
                        "name": "expandMessageExamples",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Expandmessageexamples"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/asyncapi.json": {
            "get": {
                "tags": [
                    "asyncapi"
                ],
                "summary": "Download App Json Schema",
                "operationId": "download_app_json_schema_asyncapi_json_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/asyncapi.yaml": {
            "get": {
                "tags": [
                    "asyncapi"
                ],
                "summary": "Download App Yaml Schema",
                "operationId": "download_app_yaml_schema_asyncapi_yaml_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "EmailName": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "EmailName"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HealthCheckResponse": {
                "properties": {
                    "healthy": {
                        "type": "boolean",
                        "title": "Healthy"
                    }
                },
                "type": "object",
                "required": [
                    "healthy"
                ],
                "title": "HealthCheckResponse",
                "description": "Health check response model"
            },
            "MessagePreview": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    },
                    "from": {
                        "items": {
                            "$ref": "#/components/schemas/EmailName"
                        },
                        "type": "array",
                        "title": "From"
                    },
                    "subject": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subject"
                    },
                    "snippet": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Snippet"
                    },
                    "has_attachments": {
                        "type": "boolean",
                        "title": "Has Attachments",
                        "default": false
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "from"
                ],
                "title": "MessagePreview"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
} as const